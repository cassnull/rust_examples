// Каждый параметр являющийся ссылкой, получает свой собственный параметр времени жизни
#[allow(dead_code)]
fn first_rule<'a, 'b>(_x: &'a i32, _y: &'b i32) {}

// Если существует точно один входной параметр времени жизни, то его время жизни назначается всем выходным параметрам
#[allow(dead_code)]
fn second_rule<'a>(x: &'a i32) -> &'a i32 {
    x
}

#[allow(dead_code)]
struct ImportantExcerpt<'a> {
    part: &'a str,
}

#[allow(dead_code)]
impl<'a> ImportantExcerpt<'a> {
    // Если есть множество входных параметров времени жизни, но один из них является ссылкой &self или &mut self
    // при условии что эта функция является методом структуры или перечисления, то время жизни self назначается
    // временем жизни всем выходным параметрам метода
    fn third_rule<'b>(&'a self, _x: &'b str) -> &'a str {
        self.part
    }
}

fn main() {}
